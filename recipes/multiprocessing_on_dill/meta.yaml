{% set name = "multiprocessing_on_dill" %}
{% set version = "3.5.0a4" %}
{% set file_ext = "tar.gz" %}
{% set hash_type = "sha256" %}
{% set hash_value = "d6d50c300ff4bd408bb71eb78725e60231039ee9b3d0d9bb7697b9d0e15045e7" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ file_ext }}
  '{{ hash_type }}': '{{ hash_value }}'

build:
  noarch: python 
  number: 0
  script: python -m pip install --no-deps --ignore-installed .

requirements:
  host:
    - python
    - setuptools
    - dill
  run:
    - python
    - dill

test:
  imports:
    - multiprocessing_on_dill
    - multiprocessing_on_dill.dummy

about:
  home: https://github.com/sixty-north/multiprocessing_on_dill
  license: Python Software Foundation License
  license_family: OTHER
  license_file: ''
  summary: A friendly fork of multiprocessing which uses dill instead of pickle
  description: "Multiprocessing on Dill\n=======================\n\nThis project is a friendly fork \u2013 for Python 3 \u2013 of the Python Standard Library `multiprocessing\n<https://docs.python.org/3/library/multiprocessing.html>`_\
    \ module, which uses the third-party\n`dill <https://pypi.python.org/pypi/dill>`_ serializer instead of the standard ``pickle`` serializer.  This overcomes\nmany shortcomings of ``pickle`` which prevent\
    \ multiprocessing being used with lambdas, closures and other useful Python\nobjects.\n\nThe easiest way to use ``multiprocessing_on_dill`` in place of ``multiprocessing`` is simply to replace any import\n\
    statements like this::\n\n    import multiprocessing\n\nwith::\n\n    import multiprocessing_on_dill as multiprocessing\n\nand import statements like this::\n\n    from multiprocessing import Pool\n\
    \nwith::\n\n    from multiprocessing_on_dill import Pool\n\nWith such import changes in place, it will now be possible to use functions like ``Pool.map()`` with lambdas::\n\n    pool = Pool(12)\n  \
    \  result = pool.map(lambda x: x*x, range(10000))\n\nEverything else should be identical to the Python version.\n\nYou can determine from which version of the Python Standard Library ``multiprocessing_on_dill``\
    \ has been forked, by\nexamining the ``multiprocessing_on_dill.__version__`` attribute.\n\n\nFuture\n======\n\nIt is our hope that one day the Python Standard Library ``pickle`` module will gain the\
    \ additional capabilities of\n``dill`` and there will no longer be a need for ``multiprocessing_on_dill`` to exist."
  doc_url: ''
  dev_url: ''

extra:
  recipe-maintainers: 
  - abotzki
